//
// auto-generated by op2.py
//

#define double_ALIGN 128
#define float_ALIGN 64
#define int_ALIGN 64
#ifdef VECTORIZE
#define SIMD_VEC 4
#define ALIGNED_double __attribute__((aligned(double_ALIGN)))
#define ALIGNED_float __attribute__((aligned(float_ALIGN)))
#define ALIGNED_int __attribute__((aligned(int_ALIGN)))
  #ifdef __ICC
    #define DECLARE_PTR_ALIGNED(X, Y) __assume_aligned(X, Y)
  #else
    #define DECLARE_PTR_ALIGNED(X, Y)
  #endif
#else
#define ALIGNED_double
#define ALIGNED_float
#define ALIGNED_int
#define DECLARE_PTR_ALIGNED(X, Y)
#endif

// global constants
extern int DOFofOrd2d[16];
extern int SymQdTriDim[7];
extern int QdNOrd2NPt1d[10];
extern double GauQd1dCoe[90];
extern double QdPtCoe1d[60];
extern para param;
extern double SymQdTriCoe[336];
extern double QdPtBasTri[840];
extern double QdPtCoeRect[600];
extern double QdPtBasRect[1500];
extern double SdQdPtBasTri[1800];
extern double SdQdPtBasRect[2400];
extern double QdPtBasDxiTri[840];
extern double QdPtBasDetTri[840];
extern double QdPtBasDxiRect[1500];
extern double QdPtBasDetRect[1500];

// header
#include "op_lib_cpp.h"

// user kernel files
#include "hour_caldt_veckernel.cpp"
#include "hour_ele_veckernel.cpp"
#include "recons_1wh_veckernel.cpp"
#include "hour_ele2_veckernel.cpp"
#include "recons_0wh_veckernel.cpp"
